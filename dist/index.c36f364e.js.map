{"mappings":"AAAA,MAAM,QAAQ,SAAS,cAAc;AACrC,MAAM,OAAO,SAAS,cAAc;AACpC,MAAM,SAAS,SAAS,cAAc;AACtC,MAAM,MAAM;AACZ,MAAM,eAAe,SAAS,cAAc;AAE5C,OAAO,iBAAiB,SAAS;IAC/B,IAAI,WAAW,MAAM;IACrB,MAAM,QAAQ;IACd,KAAK,UAAU,OAAO;IACtB,KAAK,YAAY;IACjB,QAAQ;AACV;AAIA,SAAS,QAAQ,QAAQ;IACzB,qDAAqD;IACrD,yBAAyB;IACzB,sCAAsC;IACtC,uBAAuB;IACvB,yBAAyB;IACzB,MAAM,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,EACxB,KAAK,CAAA,WAAY,SAAS,QAC1B,KAAK,CAAA,OAAQ,QAAQ,OACrB,MAAM,CAAA,IAAK,QAAQ,IAAI;AAExB;AAEA,eAAe,QAAQ,IAAI;IACzB,QAAQ,IAAI;IACZ,MAAM,UAAU,aAAa,QAAQ,UAAU;IAC/C,MAAM,OAAO,QAAQ,cAAc;IACnC,MAAM,QAAQ,QAAQ,cAAc;IACpC,MAAM,YAAY,QAAQ,cAAc;IACxC,MAAM,WAAW,QAAQ,cAAc;IACvC,MAAM,YAAY,QAAQ,cAAc;IACxC,MAAM,YAAY,QAAQ,cAAc;IACxC,MAAM,OAAO,QAAQ,cAAc;IACnC,MAAM,aAAa,QAAQ,cAAc;IACzC,MAAM,YAAY,QAAQ,cAAc;IAGxC,KAAK,YAAY,KAAK;IACtB,MAAM,MAAM,KAAK;IACjB,UAAU,YAAY,KAAK,oBAAoB;IAC/C,SAAS,YAAY,KAAK,YAAY;IACtC,UAAU,YAAY,KAAK;IAC3B,UAAU,YAAY,KAAK;IAE3B,iBAAiB;IACjB,IAAI,OAAO,IAAI,KAAK,KAAK;IACzB,MAAM,gBAAgB,IAAI,KAAK,eAAe,SAAS;QACrD,KAAK;QACL,OAAO;QACP,MAAM;IACR;IAEA,WAAW,YAAY,cAAc,OAAO;IAE5C,KAAK,YAAY,KAAK;IACtB,UAAU,YAAY,KAAK;IAC3B,KAAK,YAAW;IAChB,KAAK,YAAY;AACnB,EAEA,2CAA2C;CAC3C,gCAAgC;CAChC,4BAA4B;CAC5B,KAAK","sources":["index.js"],"sourcesContent":["const input = document.querySelector(\".input\");\r\nconst card = document.querySelector(\".card\");\r\nconst button = document.querySelector(\".btn\");\r\nconst URL = \"https://api.github.com/users/\";\r\nconst cardtemplate = document.querySelector('[data-card]');\r\n\r\nbutton.addEventListener(\"click\", () => {\r\n  let username = input.value;\r\n  input.value = \"\";\r\n  card.classList.remove(\"hide\");\r\n  card.innerHTML = \"LOADING...\";\r\n  getData(username);\r\n});\r\n\r\n\r\n\r\nfunction getData(username) {\r\n//   const result = await fetch(`${URL}${username}`);\r\n//   console.log(result);\r\n//   const data = await result.json();\r\n//   console.log(data);\r\n//   await setData(data);\r\nfetch(`${URL}${username}`)\r\n.then(response => response.json())\r\n.then(data => setData(data))\r\n.catch(e => console.log(e));\r\n\r\n}\r\n\r\nasync function setData(data) {\r\n  console.log(\"here\");\r\n  const newCard = cardtemplate.content.cloneNode(true);\r\n  const name = newCard.querySelector(\".users-name\");\r\n  const image = newCard.querySelector(\".userimage\");\r\n  const twitterid = newCard.querySelector(\".twitter\");\r\n  const location = newCard.querySelector(\".location\");\r\n  const followers = newCard.querySelector(\"#followerCount\");\r\n  const following = newCard.querySelector(\"#followingCount\");\r\n  const repo = newCard.querySelector(\"#reposCount\");\r\n  const activedate = newCard.querySelector(\".date\");\r\n  const user_name = newCard.querySelector(\".username\");\r\n\r\n  \r\n  name.innerText = data.name;\r\n  image.src = data.avatar_url;\r\n  twitterid.innerText = data.twitter_username || \"not given\";\r\n  location.innerText = data.location || \"not given\";\r\n  followers.innerText = data.followers;\r\n  following.innerText = data.following;\r\n\r\n  //date formatting\r\n  let date = new Date(data.created_at);\r\n  const dateFormatter = new Intl.DateTimeFormat('en-US', {\r\n    day: 'numeric',\r\n    month: 'long',\r\n    year: 'numeric',\r\n  });\r\n\r\n  activedate.innerText = dateFormatter.format(date);\r\n\r\n  repo.innerText = data.public_repos;\r\n  user_name.innerText = data.login;\r\n  card.innerHTML =\"\";\r\n  card.appendChild(newCard);\r\n}\r\n\r\n// button.addEventListener('click', ()=>  {\r\n//     console.log(input.value);\r\n//     getData(input.value);\r\n// })\r\n"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}